#include "../sort.cpp"

//0.双向冒泡排序，即第一趟把关键字最大的元素放在序列的最后面，第二趟把关键字最小的元素放在序列的最前面，如此反复进行。

//1.设计把顺序表所有奇数移动到所有偶数前边的算法（要求时间最少，辅助空间最少）

//2.找到第k小的元素(类似快排)

//3.设有一个仅由红、白、蓝三种颜色的条块组成的条块序列，写一个时间复杂度为O(n)的算法，使得这些条块按红、白、蓝的顺序排好

/*真题1.已知由n （n>=2）个正整数构成的集合A= {ak | 0 <= k < n},将其划分为两个不相交的子集A1和A2,
元素个数分别是n1和n2，A1和A2中的元素之和分别S1和S2
设计一个尽可能高效的划分算法，满足|n1 - n2|最小且|S1 - S2|最大*/

int main() {
    int temp[8] = { 1,24,12,35,4,13,72,54 };
    print_arr(temp, 8);
    cout << "after sort:\n";
    print_arr(Insertsort(temp, 8), 8);
}